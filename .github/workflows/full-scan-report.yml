name: full-scan-report

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Image tags to scan (comma-separated, default: from CI_IMAGE_TAG or latest tag)"
        required: false
        default: ""

permissions:
  contents: read
  packages: read

env:
  REG: ghcr.io/rulehub

jobs:
  scan:
    name: Full ecosystem scan (visibility only)
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/rulehub/ci-base:latest
    strategy:
      fail-fast: false
      matrix:
        image: ["ci-base", "ci-policy", "ci-charts", "ci-frontend"]
        include:
          - image: "ci-base"
            label: base
          - image: "ci-policy"
            label: policy
          - image: "ci-charts"
            label: charts
          - image: "ci-frontend"
            label: frontend
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Parse tags input or derive default
        id: tags
        shell: bash
        env:
          INPUT_TAGS: ${{ github.event.inputs.tags }}
        run: |
          # Prefer explicit input, then repo/org variable CI_IMAGE_TAG, else fall back to "latest"
          T="${INPUT_TAGS:-}"
          if [ -z "$T" ] && [ -n "${CI_IMAGE_TAG:-}" ]; then
            T="$CI_IMAGE_TAG"
          fi
          if [ -z "$T" ]; then
            T="latest"
          fi
          # Under act we build local images as part of Stage 1 with tag 'latest'.
          # Override tags to 'latest' to scan local images via the docker daemon.
          if [ "${GITHUB_ACTOR:-}" = "nektos/act" ]; then
            T="latest"
          fi
          echo "tags=$T" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        if: ${{ github.actor != 'nektos/act' }}
        run: echo "${{ github.token }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      # syft & grype are available inside the container image

      - name: Detect scan capability and set image source
        id: detect
        shell: bash
        run: |
          SCAN_ENABLE=1
          IMG_SRC_PREFIX=""
          if [ "${GITHUB_ACTOR:-}" = "nektos/act" ]; then
            # Under act, GHCR auth and docker daemon access are unreliable; skip scans.
            SCAN_ENABLE=0
            echo "[detect] act environment detected; disabling scans (visibility-only)."
          fi
          echo "IMG_SRC=${IMG_SRC_PREFIX}" >> "$GITHUB_ENV"
          echo "SCAN_ENABLE=${SCAN_ENABLE}" >> "$GITHUB_ENV"
          echo "scan_enable=$SCAN_ENABLE" >> "$GITHUB_OUTPUT"

      - name: Pull image (${{ matrix.label }})
        if: ${{ github.actor != 'nektos/act' }}
        shell: bash
        run: |
          IFS=',' read -r -a TAGS <<< "${{ steps.tags.outputs.tags }}"
          for tag in "${TAGS[@]}"; do
            docker pull "$REG/${{ matrix.image }}:$tag"
          done

      - name: Generate SBOM (full, ${{ matrix.label }})
        if: ${{ steps.detect.outputs.scan_enable == '1' }}
        shell: bash
        run: |
          IFS=',' read -r -a TAGS <<< "${{ steps.tags.outputs.tags }}"
          for tag in "${TAGS[@]}"; do
            syft "${IMG_SRC}${REG}/${{ matrix.image }}:$tag" -o syft-json > "sbom-full-${{ matrix.image }}-$tag.syft.json"
          done

      - name: Vulnerability scan (full, non-blocking, ${{ matrix.label }})
        if: ${{ steps.detect.outputs.scan_enable == '1' }}
        env:
          GRYPE_CHECK_FOR_APP_UPDATE: "false"
        continue-on-error: true
        shell: bash
        run: |
          IFS=',' read -r -a TAGS <<< "${{ steps.tags.outputs.tags }}"
          for tag in "${TAGS[@]}"; do
            grype "sbom:sbom-full-${{ matrix.image }}-$tag.syft.json" -o json > "grype-${{ matrix.image }}-$tag.json" || true
          done

      - name: Skip scan (no docker or registry auth under act)
        if: ${{ steps.detect.outputs.scan_enable != '1' }}
        run: |
          echo "Skipping SBOM + vulnerability scan for ${{ matrix.label }}: no docker socket or registry auth available under act."

      - name: Upload artifacts (${{ matrix.label }})
        if: ${{ always() && github.actor != 'nektos/act' }}
        uses: actions/upload-artifact@v4
        with:
          name: full-scan-${{ matrix.label }}
          path: |
            sbom-full-${{ matrix.image }}-*.syft.json
            grype-${{ matrix.image }}-*.json
